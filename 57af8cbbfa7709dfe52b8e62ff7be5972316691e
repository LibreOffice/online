{
  "comments": [
    {
      "key": {
        "uuid": "3aaa91ec_6146fcc0",
        "filename": "loolwsd/ChildProcessSession.cpp",
        "patchSetId": 4
      },
      "lineNbr": 435,
      "author": {
        "id": 1000871
      },
      "writtenOn": "2016-02-06T14:25:40Z",
      "side": 1,
      "message": "Can we move this to _onLoad ? I really want to have all document logic in one place, centralized. Child should track minimum information about docs. In the future, we should have an object instead of standalone callbacks.\n\nLet me know if we can move this at all (and we can do it as a follow-up patch).",
      "range": {
        "startLine": 433,
        "startChar": 8,
        "endLine": 435,
        "endChar": 40
      },
      "revId": "57af8cbbfa7709dfe52b8e62ff7be5972316691e",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3aaa91ec_21235407",
        "filename": "loolwsd/ChildProcessSession.cpp",
        "patchSetId": 4
      },
      "lineNbr": 435,
      "author": {
        "id": 1000897
      },
      "writtenOn": "2016-02-06T15:48:15Z",
      "side": 1,
      "message": "Hmm. That seems not possible/hard to me. \n\nTo detect if it is a second password attempt (wrong password in the first attempt), or first password attempt, I need to keep track of number of times LOK callback is triggered which is a separate thing than the \u0027load\u0027 operation. If we are to move this block of code to onLoad, we would need to pass that information to already executing onLoad function as passwords are asked interactively by LOK\u0027s loadDocument call. This sounds little complicated :)",
      "parentUuid": "3aaa91ec_6146fcc0",
      "range": {
        "startLine": 433,
        "startChar": 8,
        "endLine": 435,
        "endChar": 40
      },
      "revId": "57af8cbbfa7709dfe52b8e62ff7be5972316691e",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3aaa91ec_a12f44f5",
        "filename": "loolwsd/ChildProcessSession.cpp",
        "patchSetId": 4
      },
      "lineNbr": 632,
      "author": {
        "id": 1000871
      },
      "writtenOn": "2016-02-06T14:25:40Z",
      "side": 1,
      "message": "I\u0027m not convinced we should generate a message generated by LOK. Perhaps we could use a different message for clients instead of relying on LOK message/behavior?",
      "range": {
        "startLine": 632,
        "startChar": 4,
        "endLine": 632,
        "endChar": 44
      },
      "revId": "57af8cbbfa7709dfe52b8e62ff7be5972316691e",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3aaa91ec_41266017",
        "filename": "loolwsd/ChildProcessSession.cpp",
        "patchSetId": 4
      },
      "lineNbr": 632,
      "author": {
        "id": 1000897
      },
      "writtenOn": "2016-02-06T15:48:15Z",
      "side": 1,
      "message": "Yeah, my initial thoughts was about introducing a new frame \u0027docloaded\u0027 serving as an acknowledgment of \u0027load\u0027 command, but then I thought why not use something that LOK already provides because, I think, LOK only emits \u0027statusindicatorfinish\u0027 callback when document has been successfully loaded (atleast till now with all the testing i have done and it is also more intuitive to think like that, kendy ?). I don\u0027t think we can have a better acknowledgment than this, something that is provided by the underlying engine, LOK, itself.",
      "parentUuid": "3aaa91ec_a12f44f5",
      "range": {
        "startLine": 632,
        "startChar": 4,
        "endLine": 632,
        "endChar": 44
      },
      "revId": "57af8cbbfa7709dfe52b8e62ff7be5972316691e",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3aaa91ec_e1394c43",
        "filename": "loolwsd/LOOLSession.cpp",
        "patchSetId": 4
      },
      "lineNbr": 179,
      "author": {
        "id": 1000871
      },
      "writtenOn": "2016-02-06T14:25:40Z",
      "side": 1,
      "message": "Why?",
      "range": {
        "startLine": 179,
        "startChar": 27,
        "endLine": 179,
        "endChar": 33
      },
      "revId": "57af8cbbfa7709dfe52b8e62ff7be5972316691e",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3aaa91ec_814968d3",
        "filename": "loolwsd/LOOLSession.hpp",
        "patchSetId": 4
      },
      "lineNbr": 44,
      "author": {
        "id": 1000871
      },
      "writtenOn": "2016-02-06T14:25:40Z",
      "side": 1,
      "message": "A comment to state when each type is used or what they mean should prove very useful to posterity.",
      "range": {
        "startLine": 44,
        "startChar": 4,
        "endLine": 44,
        "endChar": 28
      },
      "revId": "57af8cbbfa7709dfe52b8e62ff7be5972316691e",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3aaa91ec_01357845",
        "filename": "loolwsd/LOOLSession.hpp",
        "patchSetId": 4
      },
      "lineNbr": 109,
      "author": {
        "id": 1000871
      },
      "writtenOn": "2016-02-06T14:25:40Z",
      "side": 1,
      "message": "What happened to std::string? :)",
      "range": {
        "startLine": 109,
        "startChar": 4,
        "endLine": 109,
        "endChar": 15
      },
      "revId": "57af8cbbfa7709dfe52b8e62ff7be5972316691e",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3aaa91ec_413f8025",
        "filename": "loolwsd/MasterProcessSession.cpp",
        "patchSetId": 4
      },
      "lineNbr": 148,
      "author": {
        "id": 1000871
      },
      "writtenOn": "2016-02-06T14:25:40Z",
      "side": 1,
      "message": "Ideally, we shouldn\u0027t parse errors. This I can consider temp solution until we have something more solid.\n\n(Error *messages* are even worse than other messages in that they are not well-maintained, nor assumed to be important to anyone/anything.)",
      "range": {
        "startLine": 146,
        "startChar": 24,
        "endLine": 148,
        "endChar": 57
      },
      "revId": "57af8cbbfa7709dfe52b8e62ff7be5972316691e",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3aaa91ec_213cf42e",
        "filename": "loolwsd/MasterProcessSession.cpp",
        "patchSetId": 4
      },
      "lineNbr": 310,
      "author": {
        "id": 1000871
      },
      "writtenOn": "2016-02-06T14:25:40Z",
      "side": 1,
      "message": "So much better! When I read your description, I immediately imagined this.",
      "range": {
        "startLine": 310,
        "startChar": 8,
        "endLine": 310,
        "endChar": 25
      },
      "revId": "57af8cbbfa7709dfe52b8e62ff7be5972316691e",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    }
  ]
}
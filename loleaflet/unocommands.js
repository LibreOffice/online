// Don't modify, generated using unocommands.py

var unoCommandsArray = {
    AcceptAllTrackedChanges: _('Accept All'),
    AcceptTrackedChanges: _('~Manage...'),
    AnchorMenu: _('Change Anchor'),
    ArrangeFrameMenu: _('Arrange'),
    ArrangeMenu: _('A~rrange'),
    Bold: _('Bold'),
    BringToFront: _('~Bring to Front'),
    ChangeCaseRotateCase: _('Cycle Case (Title Case, UPPERCASE, lowercase)'),
    ChangeCaseToLower: _('~lowercase'),
    ChangeCaseToSentenceCase: _('~Sentence case'),
    ChangeCaseToTitleCase: _('~Capitalize Every Word'),
    ChangeCaseToToggleCase: _('~tOGGLE cASE'),
    ChangeCaseToUpper: _('~UPPERCASE'),
    ClearOutline: _('~Remove Outline'),
    CommonAlignBottom: _('Bottom'),
    CommonAlignHorizontalCenter: _('Centered'),
    CommonAlignJustified: _('Justified'),
    CommonAlignLeft: _('Left'),
    CommonAlignRight: _('Right'),
    CommonAlignTop: _('Top'),
    ContinueNumbering: _('Continue previous numbering'),
    ControlCodes: _('Formatting Marks'),
    Copy: _('~Copy'),
    CopyHyperlinkLocation: _('Copy Link Location'),
    Cut: _('~Cut'),
    DecrementIndent: _('Decrease'),
    DecrementLevel: _('Demote One Level'),
    DefaultBullet: _('Bullets'),
    DefaultNumbering: _('Numbering'),
    DeleteAllNotes: _('Delete All Comments'),
    DeleteAuthor: _('Delete All Comments by This Author'),
    DeleteColumns: _('Delete Columns'),
    DeleteComment: _('Delete Comment'),
    DeleteRows: _('Delete Rows'),
    DeleteTable: _('Delete Table'),
    EditStyle: _('E~dit Style...'),
    EntireCell: _('Select Cell'),
    EntireColumn: _('Select Column'),
    EntireRow: _('Select Rows'),
    FontDialog: _('Character...'),
    FormatCellDialog: _('Format ~Cells...'),
    Group: _('~Group...'),
    Grow: _('Increase'),
    HideDetail: _('~Hide Details'),
    HyperlinkDialog: _('~Link...'),
    IncrementIndent: _('Increase'),
    IncrementLevel: _('Promote One Level'),
    IncrementSubLevels: _('Promote One Level With Subpoints'),
    InsertColumnBreak: _('Insert ~Column Break'),
    InsertColumns: _('Insert Co~lumns Left'),
    InsertColumnsAfter: _('Insert Co~lumns Right'),
    InsertColumnsBefore: _('Insert Co~lumns Left'),
    InsertEndnote: _('~Endnote'),
    InsertFootnote: _('~Footnote'),
    InsertHardHyphen: _('Non-br~eaking hyphen'),
    InsertIndexesEntry: _('~Index Entry...'),
    InsertLRM: _('~Left-to-right mark'),
    InsertNeutralParagraph: _('Insert Unnumbered Entry'),
    InsertNonBreakingSpace: _('~Non-breaking space'),
    InsertRLM: _('~Right-to-left mark'),
    InsertRows: _('Insert ~Rows Above'),
    InsertRowsAfter: _('Insert ~Rows Below'),
    InsertRowsBefore: _('Insert ~Rows Above'),
    InsertSoftHyphen: _('S~oft hyphen'),
    InsertZWNBSP: _('No-width no ~break'),
    InsertZWSP: _('No-~width optional break'),
    Italic: _('Italic'),
    JumpDownThisLevel: _('To Next Paragraph in Level'),
    JumpUpThisLevel: _('To Previous Paragraph in Level'),
    MergeCells: _('Merge Cells'),
    MoveDown: _('Move Down'),
    MoveDownSubItems: _('Move Down with Subpoints'),
    MoveUp: _('Move Up'),
    MoveUpSubItems: _('Move Up with Subpoints'),
    NextTrackedChange: _('Next'),
    NumberingStart: _('Restart Numbering'),
    ObjectBackOne: _('Back One'),
    ObjectForwardOne: _('Forward One'),
    OpenHyperlinkOnCursor: _('Open Link'),
    OutlineBullet: _('~Bullets and Numbering...'),
    OutlineFont: _('Outline'),
    Overline: _('Overline'),
    ParaLeftToRight: _('Left-To-Right'),
    ParaRightToLeft: _('Right-To-Left'),
    ParagraphDialog: _('P~aragraph...'),
    ParaspaceDecrease: _('Decrease'),
    ParaspaceIncrease: _('Increase'),
    Paste: _('~Paste'),
    PasteSpecialMenu: _('Paste ~Special'),
    PasteUnformatted: _('Paste Unformatted Text'),
    PreviousTrackedChange: _('Pr~evious'),
    RecalcPivotTable: _('~Refresh Pivot Table'),
    Redo: _('~Redo'),
    RejectAllTrackedChanges: _('Reject All'),
    RemoveHyperlink: _('Remove Link'),
    RemoveTableOf: _('Delete index'),
    ReplyComment: _('Reply Comment'),
    ResetAttributes: _('Clear ~Direct Formatting'),
    RotateLeft: _('Rotate 90° ~Left'),
    RotateMenu: _('Rot~ate'),
    RotateRight: _('Rotate 90° ~Right'),
    SearchDialog: _('Find & Rep~lace...'),
    SelectAll: _('Select ~All'),
    SelectTable: _('Select Table'),
    SendToBack: _('~Send to Back'),
    SetAnchorAtChar: _('Anchor to Character'),
    SetAnchorToChar: _('Anchor as Character'),
    SetAnchorToFrame: _('Anchor To Frame'),
    SetAnchorToPage: _('Anchor: To P~age'),
    SetAnchorToPara: _('Anchor To Paragraph'),
    SetOptimalColumnWidth: _('~Optimal Column Width...'),
    Shadowed: _('Shadow'),
    ShowDetail: _('~Show Details'),
    ShowTrackedChanges: _('~Show'),
    Shrink: _('Decrease'),
    SmallCaps: _('Small capitals'),
    SpacePara1: _('Line Spacing: 1'),
    SpacePara15: _('Line Spacing: 1.5'),
    SpacePara2: _('Line Spacing: 2'),
    SpellOnline: _('Auto Spellcheck'),
    SpellingAndGrammarDialog: _('Spelling'),
    Strikeout: _('Strikethrough'),
    SubScript: _('Subscript'),
    SuperScript: _('Superscript'),
    TableDeleteMenu: _('~Delete'),
    TableDialog: _('Ta~ble Properties...'),
    TableInsertMenu: _('~Insert'),
    TrackChanges: _('~Record'),
    Underline: _('Underline'),
    UnderlineDouble: _('Underline: Double'),
    Undo: _('Undo'),
    Ungroup: _('~Ungroup...'),
    UpdateCurIndex: _('Update Index'),
    WordCountDialog: _('~Word Count'),
    WrapAnchorOnly: _('Wrap First Paragraph'),
    WrapContour: _('Wrap Contour On'),
    WrapIdeal: _('~Optimal Page Wrap'),
    WrapLeft: _('Wrap Left'),
    WrapMenu: _('~Wrap'),
    WrapOff: _('Wrap Off'),
    WrapOn: _('~Page Wrap'),
    WrapRight: _('Wrap Right'),
    WrapThrough: _('~Wrap Through'),
    WrapThroughTransparent: _('In ~Background'),
};

global._UNO = function(string) {
        var text = unoCommandsArray[string.substr(5)];
        if (text !== undefined) {
            text = text.replace('~', '');
        } else {
            // we should avoid this, but when it happens, present at least
            // somehow reasonable text
            text = string.substr(5);
        }
        return text;
}
